{"version":3,"sources":["components/Container/Container.module.css","components/ContactList/ContactList.module.css","components/ContactItem/ContactItem.module.css","components/Container/Container.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css"],"names":["module","exports","Container","children","className","s","container","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","target","value","reset","event","preventDefault","form","label","type","input","onChange","autoComplete","button","disabled","Filter","ContactItem","onDelete","btnDelete","onClick","ContactList","contacts","onDeleteContact","map","id","contactItem","App","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocalStorage","setContacts","filter","setFilter","getContactsNames","reduce","allNames","push","toLowerCase","includes","alert","contact","shortid","generate","normalizedFilter","getVisibleContacts","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.46874670.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3EBE6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactList_contactItem__1Y8oL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnDelete\":\"ContactItem_btnDelete__235gt\"};","import PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nexport default function Container({ children }) {\n    return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n    children: PropTypes.node,\n};\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\n\nexport default function ContactForm({ onSubmit }) {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const handleChange = ({ target }) => {\n        const { name, value } = target;\n\n        switch (name) {\n            case 'name':\n                setName(value);\n                break;\n\n            case 'number':\n                setNumber(value);\n                break;\n\n            default:\n                return;\n        }\n    };\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        onSubmit(name, number);\n        reset();\n    };\n\n    const reset = () => {\n        setName('');\n        setNumber('');\n    };\n\n    return (\n        <form onSubmit={handleSubmit} className={s.form}>\n            <label className={s.label}>\n                Name\n                <input\n                    type=\"text\"\n                    className={s.input}\n                    name=\"name\"\n                    value={name}\n                    onChange={handleChange}\n                    autoComplete=\"off\"\n                />\n            </label>\n            <label className={s.label}>\n                Number\n                <input\n                    type=\"tel\"\n                    className={s.input}\n                    name=\"number\"\n                    value={number}\n                    onChange={handleChange}\n                    autoComplete=\"off\"\n                />\n            </label>\n            <button\n                type=\"submit\"\n                className={s.button}\n                disabled={name === '' || number === ''}\n            >\n                Add contact\n            </button>\n        </form>\n    );\n}\n\nContactForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n};\n\n// OLD CLASS\n// class ContactForm extends Component {\n//     state = {\n//         name: '',\n//         number: '',\n//     };\n\n//     handleChange = event => {\n//         const { name, value } = event.currentTarget;\n//         this.setState({ [name]: value });\n//     };\n\n//     handleSubmit = event => {\n//         event.preventDefault();\n//         this.props.onSubmit(this.state);\n//         this.reset();\n//     };\n\n//     reset = () => {\n//         this.setState({ name: '', number: '' });\n//     };\n\n//     render() {\n//         const { name, number } = this.state;\n\n//         return (\n//             <form onSubmit={this.handleSubmit} className={s.form}>\n//                 <label className={s.label}>\n//                     Name\n//                     <input\n//                         type=\"text\"\n//                         className={s.input}\n//                         name=\"name\"\n//                         value={name}\n//                         onChange={this.handleChange}\n//                         autoComplete=\"off\"\n//                     />\n//                 </label>\n//                 <label className={s.label}>\n//                     Number\n//                     <input\n//                         type=\"tel\"\n//                         className={s.input}\n//                         name=\"number\"\n//                         value={number}\n//                         onChange={this.handleChange}\n//                         autoComplete=\"off\"\n//                     />\n//                 </label>\n//                 <button\n//                     type=\"submit\"\n//                     className={s.button}\n//                     disabled={name === '' || number === ''}\n//                 >\n//                     Add contact\n//                 </button>\n//             </form>\n//         );\n//     }\n// }\n","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nexport default function Filter({ value, onChange }) {\n    return (\n        <label className={s.label}>\n            Find contacts by name\n            <input\n                type=\"text\"\n                className={s.input}\n                value={value}\n                onChange={onChange}\n                autoComplete=\"off\"\n            />\n        </label>\n    );\n}\n\nFilter.propTypes = {\n    value: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './ContactItem.module.css';\n\nexport default function ContactItem({ name, number, onDelete }) {\n    return (\n        <>\n            {name}: {number}\n            <button type=\"button\" className={s.btnDelete} onClick={onDelete}>\n                Delete\n            </button>\n        </>\n    );\n}\n\nContactItem.propTypes = {\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    onDelete: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\nimport ContactItem from '../ContactItem';\n\nexport default function ContactList({ contacts, onDeleteContact }) {\n    return (\n        <ul>\n            {contacts.map(({ id, name, number }) => (\n                <li key={id} className={s.contactItem}>\n                    <ContactItem\n                        name={name}\n                        number={number}\n                        onDelete={() => {\n                            onDeleteContact(id);\n                        }}\n                    />\n                </li>\n            ))}\n        </ul>\n    );\n}\n\nContactList.propTypes = {\n    contacts: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n            number: PropTypes.string.isRequired,\n        }),\n    ),\n    onDeleteContact: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport shortid from 'shortid';\n\nimport Container from './components/Container';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\n// Кастомный хук useLocalStorage (для переиспользования кода)\nconst useLocalStorage = (key, defaultValue) => {\n    const [state, setState] = useState(\n        () => JSON.parse(window.localStorage.getItem(key)) ?? defaultValue,\n    );\n\n    useEffect(() => {\n        window.localStorage.setItem(key, JSON.stringify(state));\n    }, [key, state]);\n\n    return [state, setState];\n};\n// lazy state initialization - в useState передаем не выражение, а анонимку с выражением, тогда используется этот код только один раз\n\nexport default function App() {\n    const [contacts, setContacts] = useLocalStorage('contacts', []);\n    const [filter, setFilter] = useState('');\n\n    const addContact = (name, number) => {\n        const contactsNames = getContactsNames();\n        if (contactsNames.includes(name.toLowerCase())) {\n            alert(`${name} is already in contacts`);\n            return;\n        }\n\n        const contact = {\n            id: shortid.generate(),\n            name,\n            number,\n        };\n\n        setContacts(state => [contact, ...state]);\n    };\n\n    const deleteContact = contactId => {\n        setContacts(contacts.filter(contact => contact.id !== contactId));\n    };\n\n    const changeFilter = ({ target }) => {\n        setFilter(target.value);\n    };\n\n    const getVisibleContacts = () => {\n        const normalizedFilter = filter.toLowerCase();\n        return contacts.filter(({ name }) =>\n            name.toLowerCase().includes(normalizedFilter),\n        );\n    };\n\n    const getContactsNames = () => {\n        return contacts.reduce((allNames, { name }) => {\n            allNames.push(name.toLowerCase());\n            return allNames;\n        }, []);\n    };\n\n    return (\n        <Container>\n            <h1>Phonebook</h1>\n            <ContactForm onSubmit={addContact} />\n\n            <h2>Contacts</h2>\n            <Filter value={filter} onChange={changeFilter} />\n            <ContactList\n                contacts={getVisibleContacts()}\n                onDeleteContact={deleteContact}\n            />\n        </Container>\n    );\n}\n\n// OLD CLASS\n// class App extends PureComponent {\n//     state = {\n//         contacts: [],\n//         filter: '',\n//     };\n\n//     componentDidMount() {\n//         const contacts = JSON.parse(localStorage.getItem('contacts'));\n//         if (contacts) {\n//             this.setState({ contacts });\n//         }\n//     }\n\n//     componentDidUpdate(prevProps, prevState) {\n//         if (this.state.contacts !== prevState.contacts) {\n//             localStorage.setItem(\n//                 'contacts',\n//                 JSON.stringify(this.state.contacts),\n//             );\n//         }\n//     }\n\n//     addContact = ({ name, number }) => {\n//         const contactsNames = this.getContactsNames();\n//         if (contactsNames.includes(name.toLowerCase())) {\n//             alert(`${name} is already in contacts`);\n//             return;\n//         }\n\n//         const contact = {\n//             id: shortid.generate(),\n//             name,\n//             number,\n//         };\n\n//         this.setState(({ contacts }) => ({\n//             contacts: [contact, ...contacts],\n//         }));\n//     };\n\n//     deleteContact = contactId => {\n//         this.setState(({ contacts }) => ({\n//             contacts: contacts.filter(contact => contact.id !== contactId),\n//         }));\n//     };\n\n//     changeFilter = event => {\n//         this.setState({ filter: event.currentTarget.value });\n//     };\n\n//     getVisibleContacts = () => {\n//         const { contacts, filter } = this.state;\n//         const normalizedFilter = filter.toLowerCase();\n//         return contacts.filter(({ name }) =>\n//             name.toLowerCase().includes(normalizedFilter),\n//         );\n//     };\n\n//     getContactsNames = () => {\n//         const { contacts } = this.state;\n//         return contacts.reduce((allNames, { name }) => {\n//             allNames.push(name.toLowerCase());\n//             return allNames;\n//         }, []);\n//     };\n\n//     render() {\n//         const { filter } = this.state;\n//         const visibleContacts = this.getVisibleContacts();\n\n//         return (\n//             <Container>\n//                 <h1>Phonebook</h1>\n//                 <ContactForm onSubmit={this.addContact} />\n\n//                 <h2>Contacts</h2>\n//                 <Filter value={filter} onChange={this.changeFilter} />\n//                 <ContactList\n//                     contacts={visibleContacts}\n//                     onDeleteContact={this.deleteContact}\n//                 />\n//             </Container>\n//         );\n//     }\n// }\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1ER9G\",\"label\":\"ContactForm_label__1xbKQ\",\"input\":\"ContactForm_input__3Eobf\",\"button\":\"ContactForm_button__hZRQk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2lB0O\",\"input\":\"Filter_input__3ZsKA\"};"],"sourceRoot":""}